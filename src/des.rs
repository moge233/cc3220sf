#[doc = r"Register block"]
#[repr(C)]
pub struct RegisterBlock {
    #[doc = "0x00 - KEY3 (LSW) for 192-bit key"]
    pub key3_l: KEY3_L,
    #[doc = "0x04 - KEY3 (MSW) for 192-bit key"]
    pub key3_h: KEY3_H,
    #[doc = "0x08 - KEY2 (LSW) for 192-bit key"]
    pub key2_l: KEY2_L,
    #[doc = "0x0c - KEY2 (MSW) for 192-bit key"]
    pub key2_h: KEY2_H,
    #[doc = "0x10 - KEY1 (LSW) for 128-bit key/192-bit key"]
    pub key1_l: KEY1_L,
    #[doc = "0x14 - KEY1 (LSW) for 128-bit key/192-bit key"]
    pub key1_h: KEY1_H,
    #[doc = "0x18 - Initialization vector LSW"]
    pub iv_l: IV_L,
    #[doc = "0x1c - Initialization vector MSW"]
    pub iv_h: IV_H,
    #[doc = "0x20 - CTRL"]
    pub ctrl: CTRL,
    #[doc = "0x24 - Indicates the cryptographic data length in bytes for all modes. Once processing is started with this context this length decrements to zero. Data lengths up to (2^32 1) bytes are allowed. A write to this register triggers the engine to start using this context. For a Host read operation these registers return all-zeroes."]
    pub length: LENGTH,
    #[doc = "0x28 - Data register(LSW) to read/write encrypted/decrypted data."]
    pub data_l: DATA_L,
    #[doc = "0x2c - Data register(MSW) to read/write encrypted/decrypted data."]
    pub data_h: DATA_H,
    #[doc = "0x30 - REVISION"]
    pub revision: REVISION,
    #[doc = "0x34 - SYSCONFIG"]
    pub sysconfig: SYSCONFIG,
    #[doc = "0x38 - SYSSTATUS"]
    pub sysstatus: SYSSTATUS,
    #[doc = "0x3c - This register indicates the interrupt status. If one of the interrupt bits is set the interrupt output will be asserted"]
    pub irqstatus: IRQSTATUS,
    #[doc = "0x40 - This register contains an enable bit for each unique interrupt generated by the module. It matches the layout of DES_IRQSTATUS register. An interrupt is enabled when the bit in this register is set to 1 ****************************************************************************"]
    pub irqenable: IRQENABLE,
}
#[doc = "KEY3 (LSW) for 192-bit key\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [key3_l](key3_l) module"]
pub type KEY3_L = crate::Reg<u32, _KEY3_L>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _KEY3_L;
#[doc = "`read()` method returns [key3_l::R](key3_l::R) reader structure"]
impl crate::Readable for KEY3_L {}
#[doc = "`write(|w| ..)` method takes [key3_l::W](key3_l::W) writer structure"]
impl crate::Writable for KEY3_L {}
#[doc = "KEY3 (LSW) for 192-bit key"]
pub mod key3_l;
#[doc = "KEY3 (MSW) for 192-bit key\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [key3_h](key3_h) module"]
pub type KEY3_H = crate::Reg<u32, _KEY3_H>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _KEY3_H;
#[doc = "`read()` method returns [key3_h::R](key3_h::R) reader structure"]
impl crate::Readable for KEY3_H {}
#[doc = "`write(|w| ..)` method takes [key3_h::W](key3_h::W) writer structure"]
impl crate::Writable for KEY3_H {}
#[doc = "KEY3 (MSW) for 192-bit key"]
pub mod key3_h;
#[doc = "KEY2 (LSW) for 192-bit key\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [key2_l](key2_l) module"]
pub type KEY2_L = crate::Reg<u32, _KEY2_L>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _KEY2_L;
#[doc = "`read()` method returns [key2_l::R](key2_l::R) reader structure"]
impl crate::Readable for KEY2_L {}
#[doc = "`write(|w| ..)` method takes [key2_l::W](key2_l::W) writer structure"]
impl crate::Writable for KEY2_L {}
#[doc = "KEY2 (LSW) for 192-bit key"]
pub mod key2_l;
#[doc = "KEY2 (MSW) for 192-bit key\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [key2_h](key2_h) module"]
pub type KEY2_H = crate::Reg<u32, _KEY2_H>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _KEY2_H;
#[doc = "`read()` method returns [key2_h::R](key2_h::R) reader structure"]
impl crate::Readable for KEY2_H {}
#[doc = "`write(|w| ..)` method takes [key2_h::W](key2_h::W) writer structure"]
impl crate::Writable for KEY2_H {}
#[doc = "KEY2 (MSW) for 192-bit key"]
pub mod key2_h;
#[doc = "KEY1 (LSW) for 128-bit key/192-bit key\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [key1_l](key1_l) module"]
pub type KEY1_L = crate::Reg<u32, _KEY1_L>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _KEY1_L;
#[doc = "`read()` method returns [key1_l::R](key1_l::R) reader structure"]
impl crate::Readable for KEY1_L {}
#[doc = "`write(|w| ..)` method takes [key1_l::W](key1_l::W) writer structure"]
impl crate::Writable for KEY1_L {}
#[doc = "KEY1 (LSW) for 128-bit key/192-bit key"]
pub mod key1_l;
#[doc = "KEY1 (LSW) for 128-bit key/192-bit key\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [key1_h](key1_h) module"]
pub type KEY1_H = crate::Reg<u32, _KEY1_H>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _KEY1_H;
#[doc = "`read()` method returns [key1_h::R](key1_h::R) reader structure"]
impl crate::Readable for KEY1_H {}
#[doc = "`write(|w| ..)` method takes [key1_h::W](key1_h::W) writer structure"]
impl crate::Writable for KEY1_H {}
#[doc = "KEY1 (LSW) for 128-bit key/192-bit key"]
pub mod key1_h;
#[doc = "Initialization vector LSW\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [iv_l](iv_l) module"]
pub type IV_L = crate::Reg<u32, _IV_L>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _IV_L;
#[doc = "`read()` method returns [iv_l::R](iv_l::R) reader structure"]
impl crate::Readable for IV_L {}
#[doc = "`write(|w| ..)` method takes [iv_l::W](iv_l::W) writer structure"]
impl crate::Writable for IV_L {}
#[doc = "Initialization vector LSW"]
pub mod iv_l;
#[doc = "Initialization vector MSW\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [iv_h](iv_h) module"]
pub type IV_H = crate::Reg<u32, _IV_H>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _IV_H;
#[doc = "`read()` method returns [iv_h::R](iv_h::R) reader structure"]
impl crate::Readable for IV_H {}
#[doc = "`write(|w| ..)` method takes [iv_h::W](iv_h::W) writer structure"]
impl crate::Writable for IV_H {}
#[doc = "Initialization vector MSW"]
pub mod iv_h;
#[doc = "CTRL\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [ctrl](ctrl) module"]
pub type CTRL = crate::Reg<u32, _CTRL>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _CTRL;
#[doc = "`read()` method returns [ctrl::R](ctrl::R) reader structure"]
impl crate::Readable for CTRL {}
#[doc = "`write(|w| ..)` method takes [ctrl::W](ctrl::W) writer structure"]
impl crate::Writable for CTRL {}
#[doc = "CTRL"]
pub mod ctrl;
#[doc = "Indicates the cryptographic data length in bytes for all modes. Once processing is started with this context this length decrements to zero. Data lengths up to (2^32 1) bytes are allowed. A write to this register triggers the engine to start using this context. For a Host read operation these registers return all-zeroes.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [length](length) module"]
pub type LENGTH = crate::Reg<u32, _LENGTH>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _LENGTH;
#[doc = "`read()` method returns [length::R](length::R) reader structure"]
impl crate::Readable for LENGTH {}
#[doc = "`write(|w| ..)` method takes [length::W](length::W) writer structure"]
impl crate::Writable for LENGTH {}
#[doc = "Indicates the cryptographic data length in bytes for all modes. Once processing is started with this context this length decrements to zero. Data lengths up to (2^32 1) bytes are allowed. A write to this register triggers the engine to start using this context. For a Host read operation these registers return all-zeroes."]
pub mod length;
#[doc = "Data register(LSW) to read/write encrypted/decrypted data.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [data_l](data_l) module"]
pub type DATA_L = crate::Reg<u32, _DATA_L>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _DATA_L;
#[doc = "`read()` method returns [data_l::R](data_l::R) reader structure"]
impl crate::Readable for DATA_L {}
#[doc = "`write(|w| ..)` method takes [data_l::W](data_l::W) writer structure"]
impl crate::Writable for DATA_L {}
#[doc = "Data register(LSW) to read/write encrypted/decrypted data."]
pub mod data_l;
#[doc = "Data register(MSW) to read/write encrypted/decrypted data.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [data_h](data_h) module"]
pub type DATA_H = crate::Reg<u32, _DATA_H>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _DATA_H;
#[doc = "`read()` method returns [data_h::R](data_h::R) reader structure"]
impl crate::Readable for DATA_H {}
#[doc = "`write(|w| ..)` method takes [data_h::W](data_h::W) writer structure"]
impl crate::Writable for DATA_H {}
#[doc = "Data register(MSW) to read/write encrypted/decrypted data."]
pub mod data_h;
#[doc = "REVISION\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [revision](revision) module"]
pub type REVISION = crate::Reg<u32, _REVISION>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _REVISION;
#[doc = "`read()` method returns [revision::R](revision::R) reader structure"]
impl crate::Readable for REVISION {}
#[doc = "`write(|w| ..)` method takes [revision::W](revision::W) writer structure"]
impl crate::Writable for REVISION {}
#[doc = "REVISION"]
pub mod revision;
#[doc = "SYSCONFIG\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [sysconfig](sysconfig) module"]
pub type SYSCONFIG = crate::Reg<u32, _SYSCONFIG>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _SYSCONFIG;
#[doc = "`read()` method returns [sysconfig::R](sysconfig::R) reader structure"]
impl crate::Readable for SYSCONFIG {}
#[doc = "`write(|w| ..)` method takes [sysconfig::W](sysconfig::W) writer structure"]
impl crate::Writable for SYSCONFIG {}
#[doc = "SYSCONFIG"]
pub mod sysconfig;
#[doc = "SYSSTATUS\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [sysstatus](sysstatus) module"]
pub type SYSSTATUS = crate::Reg<u32, _SYSSTATUS>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _SYSSTATUS;
#[doc = "`read()` method returns [sysstatus::R](sysstatus::R) reader structure"]
impl crate::Readable for SYSSTATUS {}
#[doc = "`write(|w| ..)` method takes [sysstatus::W](sysstatus::W) writer structure"]
impl crate::Writable for SYSSTATUS {}
#[doc = "SYSSTATUS"]
pub mod sysstatus;
#[doc = "This register indicates the interrupt status. If one of the interrupt bits is set the interrupt output will be asserted\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [irqstatus](irqstatus) module"]
pub type IRQSTATUS = crate::Reg<u32, _IRQSTATUS>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _IRQSTATUS;
#[doc = "`read()` method returns [irqstatus::R](irqstatus::R) reader structure"]
impl crate::Readable for IRQSTATUS {}
#[doc = "`write(|w| ..)` method takes [irqstatus::W](irqstatus::W) writer structure"]
impl crate::Writable for IRQSTATUS {}
#[doc = "This register indicates the interrupt status. If one of the interrupt bits is set the interrupt output will be asserted"]
pub mod irqstatus;
#[doc = "This register contains an enable bit for each unique interrupt generated by the module. It matches the layout of DES_IRQSTATUS register. An interrupt is enabled when the bit in this register is set to 1 ****************************************************************************\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [irqenable](irqenable) module"]
pub type IRQENABLE = crate::Reg<u32, _IRQENABLE>;
#[allow(missing_docs)]
#[doc(hidden)]
pub struct _IRQENABLE;
#[doc = "`read()` method returns [irqenable::R](irqenable::R) reader structure"]
impl crate::Readable for IRQENABLE {}
#[doc = "`write(|w| ..)` method takes [irqenable::W](irqenable::W) writer structure"]
impl crate::Writable for IRQENABLE {}
#[doc = "This register contains an enable bit for each unique interrupt generated by the module. It matches the layout of DES_IRQSTATUS register. An interrupt is enabled when the bit in this register is set to 1 ****************************************************************************"]
pub mod irqenable;
